class Solution {
  public:
  
    int solve(vector<int>& arr, int idx, vector<int> &dp) {
        if (idx >= arr.size())
            return 0;
    
        if (dp[idx] != -1)
            return dp[idx];
    
        int in = arr[idx] + solve(arr, idx + 2, dp);
        int ex = solve(arr, idx + 1, dp);
    
        return dp[idx] = max(in, ex);
    }

    int findMaxSum(vector<int>& arr) {
        if (arr.size() == 1)
            return arr[0];
    
        vector<int> dp1(arr.size(), -1);
        vector<int> dp2(arr.size(), -1);
    
        vector<int> arr1(arr.begin(), arr.end() - 1); 
        vector<int> arr2(arr.begin() + 1, arr.end()); 
    
        return max(solve(arr1, 0, dp1), solve(arr2, 0, dp2));
    }
    
    int maxValue(vector<int>& arr) {
        return findMaxSum(arr);
    }

};
