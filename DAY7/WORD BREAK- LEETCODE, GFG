class Solution {
public:
    bool wordBreak(string s, vector<string>& dictionary) {
       unordered_set<string> dict(dictionary.begin(), dictionary.end());
        int n = s.size();
        vector<bool> dp(n + 1, false);
        dp[0] = true;

        int maxWordLen = 0;
        for (const string &word : dictionary) maxWordLen = max(maxWordLen, (int)word.size());

        for (int i = 1; i <= n; i++) {
            for (int j = max(0, i - maxWordLen); j < i; j++) {
                if (dp[j] && dict.find(s.substr(j, i - j)) != dict.end()) {
                    dp[i] = true;
                    break;
                }
            }
        }

        return dp[n];
    }
};
