/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
       int hieght(TreeNode* root){
        if(root==NULL) return 0;
        return 1+max(hieght(root->left),hieght(root->right));
    }
    void fun(vector<vector<string>>& ans, TreeNode* root, int r, int c, int h){
        if(root==NULL) return;
        ans[r][c]+= to_string(root->val);
        fun(ans,root->left,r+1,c-pow(2,h-r-2),h);
        fun(ans,root->right,r+1,c+pow(2,h-r-2),h);
    }
    vector<vector<string>> printTree(TreeNode* root) {
        int h = hieght(root);
        int n = pow(2,h)-1;
        vector<vector<string>> ans(h, vector<string> (n, ""));
        fun(ans,root,0,(n-1)/2,h);
        return ans;
    }
};
