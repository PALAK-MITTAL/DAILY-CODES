/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> q;
        int lvl = 1;
        q.push(root);
        int maxSum = INT_MIN;
        int maxSum_lvl = 1;
        while(!q.empty()){
            int size = q.size();
            int lvlSum = 0;
            while(size--){
                TreeNode* root = q.front();
                q.pop();
                lvlSum += root->val;
                if(root->left){
                    q.push(root->left);
                }
                if(root->right){
                    q.push(root->right);
                }
            }
            if(maxSum < lvlSum){
                maxSum = lvlSum;
                maxSum_lvl = lvl;
            }
            lvl++;   
        }

        return maxSum_lvl;
    }
};
