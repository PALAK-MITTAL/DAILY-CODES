/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        merge(root1, root2);
        return root1;
    }

     void merge(TreeNode*& root1, TreeNode* root2) {
        if (!root1 && !root2) {
            return;
        }
        if (root1 && root2) {
            root1->val = root2->val + root1->val;
        }
        if (!root1 && root2) {
            TreeNode* temp = new TreeNode(0);
            root1 = temp;
            root1->val = root2->val + root1->val;
        }
        if (root1 && !root2) {
            TreeNode* temp = new TreeNode(0);
            root2 = temp;
            root1->val = root2->val + root1->val;
        }
        merge(root1->left, root2->left);
        merge(root1->right, root2->right);
        return;
    }

};
