/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
unordered_map<int,int>mpp;
void inorder(TreeNode* root){
    if(!root) return;
      inorder(root->left);
    mpp[root->val]++; 
    inorder(root->right);  
    
}
    vector<int> findMode(TreeNode* root) {
       inorder(root);
       vector<int>ans;
   int max_count =0;
       for(auto it : mpp){
   if(it.second > max_count) max_count = it.second;
       }
       for(auto p : mpp){
        if(max_count == p.second) ans.push_back(p.first);
       }
  return ans;
    }
};
